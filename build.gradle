// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.5.21'
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.2.1"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply from: 'buildsystem/dependencies.gradle'

allprojects {
    repositories {
        jcenter() {
            content {
                includeModule('de.adorsys.android', 'securestoragelibrary')
                includeModule('com.andrognito.pinlockview', 'pinlockview')
                includeModule('me.toptas.fancyshowcase', 'fancyshowcaseview')
                includeModule('org.matomo.sdk', 'tracker')
                includeModule('com.journeyapps', 'zxing-android-embedded')
                includeGroup('co.infinum')
            }
        }
        maven { url "https://maven.google.com" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        google()
        mavenCentral()
        maven { url "https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven" }
        maven { url "https://jitpack.io" }
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            def mapboxDownloadsToken = System.getenv("MAPBOX_DOWNLOADS_TOKEN") != null ? System.getenv("MAPBOX_DOWNLOADS_TOKEN") : project.properties['MAPBOX_DOWNLOADS_TOKEN']

            credentials {
                // This should always be `mapbox` (not your username).
                username = 'mapbox'
                password = mapboxDownloadsToken
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
